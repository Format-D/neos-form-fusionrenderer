prototype(Wwwision.Form.FusionPreset:FormElement) < prototype(Neos.Fusion:Array) {
    @context.elementName = ${'--' + formRuntime.identifier + '[' + element.identifier + ']'}
    @context.elementValue = ${FusionPreset.Form.elementValue(formRuntime, element)}
    @context.elementValicationErrors = ${FusionPreset.Form.validationErrors(formRuntime, element)}
    @context.elementHasValicationErrors = ${FusionPreset.Form.hasValidationErrors(formRuntime, element)}

    label = Wwwision.Form.FusionPreset:FormElementLabel {
        for = ${element.uniqueIdentifier}
        text = ${element.label}
        required = ${element.required}
    }
    fieldContainer = Neos.Fusion:Array {
        field = Neos.Fusion:Tag {
            attributes {
                placeholder = ${element.properties.placeholder}
                class = Neos.Fusion:Array {
                    defaultClass = ${element.properties.elementClassAttribute ? element.properties.elementClassAttribute : null}
                    errorClass = ${element.properties.elementErrorClassAttribute ? element.properties.elementErrorClassAttribute : 'error'}
                    errorClass.@process.whitespace = ${' ' + value}
                    errorClass.@if.hasValicationErrors = ${elementHasValicationErrors}
                }
                id = ${element.uniqueIdentifier}
            }

        }
        validationErrors = Neos.Fusion:Tag {
            tagName = 'span'
            attributes {
                class = 'help-inline'
            }
            content = Neos.Fusion:Collection {
                collection = ${elementValicationErrors}
                itemName = 'error'
                itemRenderer =  ${error}
            }
            @if.hasValidationErrors = ${elementHasValicationErrors}
        }
        elementDescription = Neos.Fusion:Tag {
            tagName = 'span'
            attributes {
                class = 'help-block'
            }
            content = ${element.properties.elementDescription}
            @if.condition = ${element.properties.elementDescription}
        }

        @process.wrap = Neos.Fusion:Tag {
            tagName = 'div'
            attributes.class = ${element.properties.containerClassAttribute}
            content = ${value}
        }
    }

    @process.renderCallbacks = Wwwision.Form.FusionPreset:RenderCallbacks {
        formRuntime = ${formRuntime}
        formElement = ${element}
    }

    @process.wrap = Neos.Fusion:Tag {
        tagName = 'div'
        attributes.class = ${hasValidationErrors ? 'clearfix error' : 'clearfix'}
        content = ${value}
    }

}

prototype(Wwwision.Form.FusionPreset:FormElementLabel) < prototype(Neos.Fusion:Tag) {
    @context.for = ${this.for}
    @context.text = ${this.text}
    @context.required = ${this.required}
    @context.requiredFlag = Wwwision.Form.FusionPreset:RequiredFlag

    tagName = 'label'
    attributes {
        for = ${for}
    }
    content = ${text}
    content.@process.requiredFlag = ${value + requiredFlag}
    content.@process.requiredFlag.@if.isRequired = ${required}
}

prototype(Wwwision.Form.FusionPreset:RequiredFlag) < prototype(Neos.Fusion:Tag) {
    tagName = 'span'
    attributes.class = 'required'
    content = ${value + '*'
}